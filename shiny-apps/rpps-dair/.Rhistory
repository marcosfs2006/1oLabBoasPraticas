shiny::runApp('rpps-dair')
runApp('rpps-dair')
runApp('rpps-dair')
runApp('rpps-dair')
runApp('rpps-dair')
runApp('rpps-dair')
runApp('rpps-dair')
runApp('rpps-dair')
runApp('rpps-dair')
runApp('rpps-dair')
runApp('rpps-dair')
runApp('rpps-dair')
runApp('rpps-dair')
runApp('rpps-dair')
runApp('rpps-dair')
runApp('rpps-dair')
runApp('rpps-dair')
runApp('rpps-dair')
runApp('rpps-dair')
runApp('rpps-dair')
runApp('rpps-dair')
runApp('rpps-dair')
runApp('rpps-dair')
setwd("I:/aud_acomp_2018/dair/rpps-dair")
library(shiny)
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyr)
library(scales) # formatar gráficos
#-------------------------------------------------------------------------------
# Preparo do ambiente
#-------------------------------------------------------------------------------
options(scipen=20, digits=15)
# Importa a base de dados do DAIR e prepara
dair <- readRDS('dados/dados_dair_DtGer_12-12-2017.rds')
dair$periodo <- as.Date(paste(dair$ano, dair$mes, "1", sep="-"), "%Y-%m-%d")
varnum <- c("quantidade", "valorAtualAtivo", "valorTotalAtual", "pctTotalRecursosSPPS", "valorAtualPatrimonioLiquidoFundo", "pctPatrimonioLiquidoFundo")
dair[, varnum] <- apply(dair[, varnum], 2, as.numeric)
dair$textoFundamentoLegal[is.na(dair$textoFundamentoLegal)] <- "Outros"
dair$textoFundamentoLegal <- gsub("[[:punct:]]", "", dair$textoFundamentoLegal)
dair$textoFundamentoLegal_chave <- toupper(gsub(' +', '', dair$textoFundamentoLegal))
limites_cmn <- read_excel("dados/limites_cmn.xlsx")
limites_cmn$ATIVO_CHAVE <- toupper(gsub('[[:punct:]]| |o', '', limites_cmn$ATIVO))
enquadramento <- read_excel("dados/2018-01-09-Planilha-de-enquadramento-dos-Fundos-DIINV-CGACI-SRPPS-2.xlsx", sheet = "Enquadramento dos fundos")
names(enquadramento) <- gsub(" +", "_", names(enquadramento))
enquadramento$Classificação_Padronizada_chave <- toupper(gsub('[[:punct:]]| |o', '', enquadramento$Classificação_Padronizada))
dair <- dair %>%
left_join(limites_cmn,   by = c("textoFundamentoLegal_chave" = "ATIVO_CHAVE"))
View(dair)
ativosCarteira <- dair %>%
filter(ente == "São Gonçalo") %>% # dados de são gonçalo
select(ente, periodo, nome, textoFundamentoLegal, valorAtualAtivo)
View(ativosCarteira)
ativosCarteira <- dair %>%
filter(ente == "São Gonçalo") %>% # dados de são gonçalo
select(periodo, identificacaoDoAtivo, nome, textoFundamentoLegal, valorAtualAtivo)
View(ativosCarteira)
names(ativosCarteira)
names(dair)
ativosCarteira <- dair %>%
filter(ente == "São Gonçalo") %>% # dados de são gonçalo
select(periodo, identificacaoDoAtivo, nome, textoFundamentoLegal, valorAtualAtivo, valorTotalAtual, pctTotalRecursosSPPS)
View(ativosCarteira)
carteira <- ativosCarteira %>%
select(periodo, identificacaoDoAtivo, valorAtualAtivo) %>%
spread(key=periodo, value=valorAtualAtivo)
View(carteira)
carteira <- ativosCarteira %>%
select(periodo, identificacaoDoAtivo, valorAtualAtivo) %>%
spread(key=identificacaoDoAtivo, value=valorAtualAtivo)
View(carteira)
peso_ativos <- ativosCarteira %>%
select(periodo, identificacaoDoAtivo, pctTotalRecursosSPPS) %>%
spread(key=identificacaoDoAtivo, value=valorAtualAtivo)
peso_ativos <- ativosCarteira %>%
select(periodo, identificacaoDoAtivo, pctTotalRecursosSPPS) %>%
spread(key=identificacaoDoAtivo, value=pctTotalRecursosSPPS)
View(peso_ativos)
Return.calculate(carteira[,-1])
library(PerformanceAnalytics)
Return.calculate(carteira[,-1])
View(carteira)
carteira <- ativosCarteira %>%
select(periodo, identificacaoDoAtivo, valorAtualAtivo) %>%
spread(key=identificacaoDoAtivo, value=valorAtualAtivo) %>%
row.names(.$periodo)
carteira <- ativosCarteira %>%
select(periodo, identificacaoDoAtivo, valorAtualAtivo) %>%
spread(key=identificacaoDoAtivo, value=valorAtualAtivo) %>%
row.names(periodo)
carteira <- ativosCarteira %>%
select(periodo, identificacaoDoAtivo, valorAtualAtivo) %>%
spread(key=identificacaoDoAtivo, value=valorAtualAtivo) %>%
row.names(.) <- periodo
carteira <- ativosCarteira %>%
select(periodo, identificacaoDoAtivo, valorAtualAtivo) %>%
spread(key=identificacaoDoAtivo, value=valorAtualAtivo) %>%
row.names(.) <- .$periodo
carteira <- ativosCarteira %>%
select(periodo, identificacaoDoAtivo, valorAtualAtivo) %>%
spread(key=identificacaoDoAtivo, value=valorAtualAtivo)
row.names(carteira) <- carteira$periodo
carteira$periodo <- NULL
View(carteira)
Return.calculate(carteira)
retornos <- Return.calculate(carteira)
View(retornos)
Return.calculate
Return.portfolio(retornos, peso_ativos)
View(retornos)
carteira[, 1]
diff(carteira[, 1]) / sum(carteira[,1])
diff(carteira[, 1]) / carteira[,1]
c(NA, diff(carteira[, 1]) / carteira[,1])
c(NA, diff(carteira[, 1]) / carteira[,1][-1])
c(NA, diff(carteira[, 1]) / carteira[,1][-length(carteira[,1])])
plota_alocacao <- function(dados_aloc, ativo){  # Já está filtrado por municipio...
#-----------------------------------------------------------------------------
#
# dados_aloc - resultado da função calcula_alocacao()
# ativo: qual ativo deve ser plotado?
#
#
#-----------------------------------------------------------------------------
if(ativo != "Todos"){ # As opções provém do app.
dados_aloc <- dados_aloc %>% filter(textoFundamentoLegal == ativo)
}
ggplot(dados_aloc,
aes(x = format(periodo, "%Y-%m"),
y = pctAplicado,
group=textoFundamentoLegal)) +
geom_line(aes(color=textoFundamentoLegal), size=1) +
geom_point(aes(color=textoFundamentoLegal), size=2) +
xlab("Meses") + ylab(iconv("Participação dos Ativos (%)", from='utf-8', to='latin1')) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, size = 12, face="bold"),
axis.text.y = element_text(size = 12, face = "bold"),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
plot.title   = element_text(size = 20)) #+
#scale_y_continuous(labels=convNum)
}
calcula_alocacao <- function(dados, munic, padroniza=FALSE){
#-----------------------------------------------
# Esta função calcula quanto cada município tem alocado
# em cada tipo de ativo em cada periodo
#
# dados: dair
# munic nome do ente
#
# Calcular isso logo no início para todos os municípios?
#----------------------------------------------
dados %>%
filter(ente == munic) %>%
group_by(periodo, textoFundamentoLegal) %>%
summarize(vlrAplicado = sum(valorTotalAtual, na.rm = TRUE),
pctAplicado = sum(pctTotalRecursosSPPS, na.rm = TRUE),
z_vlrAplicado = scale(vlrAplicado),
z_pctAplicado_z = scale(pctAplicado)) %>%
ungroup()
}
plcalcula_alocacao(dair, munic="São Gonçalo")
calcula_alocacao(dair, munic="São Gonçalo")
?scale
View(dair)
View(dair)
runApp()
View(limites_cmn)
shiny::runApp()
shiny::runApp()
runApp()
getwd()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dados <- data.frame(a=c(10, 13, 17, 14),
b=c(5, 18, 20, 17),
c=c("a", "a", "b", "b"))
View(dados)
ggpplot(dados, aes(y=a)) +
geom_bar()
ggplot(dados, aes(y=a)) +
geom_bar()
ggplot(dados, aes(y=a)) +
geom_bar(stat="identity")
ggplot(dados, aes(x=c, y=a)) +
geom_bar(stat="identity")
ggplot(dados, aes(x=c, y=a, fill="blue")) +
geom_bar(stat="identity")
ggplot(dados, aes(x=c, y=a) +
geom_bar(stat="identity", fill="blue")
ggplot(dados, aes(x=c, y=a)) +
geom_bar(stat="identity", fill="blue")
ggplot(dados, aes(x=c, y=a)) +
geom_bar(stat="identity", fill="blue") +
geom_point(x=c, y=b, color="black")
ggplot(dados, aes(x=c, y=a)) +
geom_bar(stat="identity", fill="blue") +
geom_point(aes(x=c, y=b), color="black")
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyr)
library(scales)
#-------------------------------------------------------------------------------
# Preparo do ambiente
#-------------------------------------------------------------------------------
options(scipen=20, digits=15)
# Importa a base de dados do DAIR e prepara
dair <- readRDS('dados/dados_dair_DtGer_12-12-2017.rds')
dair$periodo <- as.Date(paste(dair$ano, dair$mes, "1", sep="-"), "%Y-%m-%d")
varnum <- c("quantidade", "valorAtualAtivo", "valorTotalAtual", "pctTotalRecursosSPPS", "valorAtualPatrimonioLiquidoFundo", "pctPatrimonioLiquidoFundo")
dair[, varnum] <- apply(dair[, varnum], 2, as.numeric)
dair$textoFundamentoLegal[is.na(dair$textoFundamentoLegal)] <- "Outros"
dair$textoFundamentoLegal <- gsub("[[:punct:]]", "", dair$textoFundamentoLegal)
dair$textoFundamentoLegal_chave <- toupper(gsub(' +', '', dair$textoFundamentoLegal))
# Importa limites aplicações conf. Resolução CMN 3922/10
# Obs. a partir de xx/xx/xxxx, usar os novos limites
limites_cmn <- read_excel("dados/limites_cmn.xlsx")
limites_cmn$ATIVO_CHAVE <- toupper(gsub('[[:punct:]]| |o', '', limites_cmn$ATIVO))
# Importa dados de enquadramento
enquadramento <- read_excel("dados/2018-01-09-Planilha-de-enquadramento-dos-Fundos-DIINV-CGACI-SRPPS-2.xlsx", sheet = "Enquadramento dos fundos")
names(enquadramento) <- gsub(" +", "_", names(enquadramento))
enquadramento$Classificação_Padronizada_chave <- toupper(gsub('[[:punct:]]| |o', '', enquadramento$Classificação_Padronizada))
# Junta à base do dair os limites da Resolução 3922/10
dair <- dair %>%
left_join(limites_cmn, by = c("textoFundamentoLegal_chave" = "ATIVO_CHAVE"))
View(dair)
calcula_alocacao <- function(dados, munic){
#-----------------------------------------------
# Esta função calcula quanto cada município tem alocado
# em cada tipo de ativo em cada periodo
#
# dados: dair
# munic nome do ente
#
# Calcular isso logo no início para todos os municípios?
#----------------------------------------------
dados %>%
filter(ente == munic) %>%
group_by(periodo, textoFundamentoLegal) %>%
summarize(vlrAplicado = sum(valorTotalAtual, na.rm = TRUE),
pctAplicado = sum(pctTotalRecursosSPPS, na.rm = TRUE)) %>%
ungroup() #%>%
#mutate(txtFundLeg=gsub("[[:punct:]]", "", textoFundamentoLegal))
#left_join(limites_cmn, by=c(txtFund))
}
calcula_alocacao(dair, "São Gonçalo")
subset(dair, !duplicated(dair[, c("textoFundamentoLegal", "LIMITES")]))
subset(dair, !duplicated(dair[, c("textoFundamentoLegal", "LIMITE")]))
subset(dair, !duplicated(dair[, c("textoFundamentoLegal", "LIMITE")]), select = c("textoFundamentoLegal", "LIMITE"))
calcula_alocacao <- function(dados, munic){
#-----------------------------------------------
# Esta função calcula quanto cada município tem alocado
# em cada tipo de ativo em cada periodo
#
# dados: dair
# munic nome do ente
#
# Calcular isso logo no início para todos os municípios?
#----------------------------------------------
cmn <- subset(dair, !duplicated(dair[, c("textoFundamentoLegal", "LIMITE")]), select = c("textoFundamentoLegal", "LIMITE"))
dados %>%
filter(ente == munic) %>%
group_by(periodo, textoFundamentoLegal) %>%
summarize(vlrAplicado = sum(valorTotalAtual, na.rm = TRUE),
pctAplicado = sum(pctTotalRecursosSPPS, na.rm = TRUE)) %>%
ungroup() %>%
left_join(cmn, by="textoFundamentoLegal")
}
calcula_alocacao(dair, "São Gonçalo")
runApp()
runApp()
shiny::runApp()
dados <- read.delim2("clipboard")
View(dados)
dados <- read.delim2("clipboard", header = FALSE)
dados$V1 <- gsub("\\.", "", dados$V1)
dados$V1 <- as.numeric(gsub(",", ".", dados$V1))
diff(dados$V1)
append(NA, diff(dados$V1))
append(diff(dados$V1), NA)
append(diff(dados$V1), NA) / dados$V1
diff(dados$V1) / dados$V1
length(dados$V1)
diff(dados$V1) / dados$V1[-length(dados$V1)]
append(NA, diff(dados$V1) / dados$V1[-length(dados$V1)])
dados$var <- append(NA, diff(dados$V1) / dados$V1[-length(dados$V1)])
View(dados)
append(NA, diff(dados$V1) / dados$V1[-length(dados$V1)]) * 100
View(dados)
cumprod(1 + dados$var)
cumprod(1 + dados$var[-1])
append(NA, cumprod(1 + dados$var[-1])) -1
runApp()
shiny::runApp()
runApp()
install.packages(c("BETS", "kableExtra", "knitr", "officer", "packrat", "Rcmdr", "ReporteRs", "ReporteRsjars", "rsconnect"))
install.packages("packrat")
install.packages(c("DBI", "dbplyr", "rsconnect"))
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
setwd("I:/aud_acomp_2018/dair/rpps-dair")
dair <- readRDS('dados/dados_dair_DtGer_12-12-2017.rds')
library(dplyr)
View(dair)
unique(dair$ente)
sort(unique(dair$ente))
dair %>%
filter(ente %in% c("Angra dos Reis", "Japeri", "Belford Roxo"), !is.na(cnpj_fi))
fundos <- dair %>%
filter(ente %in% c("Angra dos Reis", "Japeri", "Belford Roxo"), !is.na(cnpj_fi))
View(fundos)
fundos_angra <- subset(fundos, entes == "Angra dos Reis")$identificacaoDoAtivo
fundos_angra <- unique(fundos_angra)
fundos_angra <- subset(fundos, ente == "Angra dos Reis")$identificacaoDoAtivo
fundos_angra <- unique(fundos_angra)
fundos_angra
fundos_japeri <- subset(fundos, ente == "Japeri")$identificacaoDoAtivo
fundos_japeri <- unique(fundos_japeri)
fundos_belfordroxo <- subset(fundos, ente == "Belford Roxo")$identificacaoDoAtivo
fundos_belfordroxo <- unique(fundos_belfordroxo)
intersect(fundos_angra, fundos_japeri, fundos_belfordroxo)
intersect(fundos_angra, fundos_japeri)
intersect(fundos_belfordroxo, fundos_japeri)
intersect(fundos_belfordroxo, fundos_angra)
fundos_angra
setwd("I:/aud_acomp_2018/dair/rpps-dair")
dair <- readRDS('dados/dados_dair_DtGer_12-12-2017.rds')
dair$periodo <- as.Date(paste(dair$ano, dair$mes, "1", sep="-"), "%Y-%m-%d")
varnum <- c("quantidade", "valorAtualAtivo", "valorTotalAtual", "pctTotalRecursosSPPS", "valorAtualPatrimonioLiquidoFundo", "pctPatrimonioLiquidoFundo")
dair[, varnum] <- apply(dair[, varnum], 2, as.numeric)
dair$textoFundamentoLegal[is.na(dair$textoFundamentoLegal)] <- "Outros"
dair$textoFundamentoLegal <- gsub("[[:punct:]]", "", dair$textoFundamentoLegal)
dair$textoFundamentoLegal_chave <- toupper(gsub(' +', '', dair$textoFundamentoLegal))
View(dair)
fundos <- dados %>%
filter(!is.na(cnpj_fi))
library(dplyr)
fundos <- dados %>%
filter(!is.na(cnpj_fi))
fundos <- dair %>%
filter(!is.na(cnpj_fi))
View(fundos)
filter(fundos, is.na(nome))
filter(fundos, nome=="Outros")
filter(fundos, textoFundamentoLegal=="Outros")
fundos <- dair %>%
filter(!is.na(cnpj_fi), textoFundamentoLegal != "Outros")
View(fundos)
View(fundos)
fundos <- dair %>%
filter(!is.na(cnpj_fi), textoFundamentoLegal != "Outros") %>%
group_by(entes, periodo) %>%
summarise(VlrRFix = sum(filter(.[["valorTotalAtual"]], grepl("^Art 7", .[["textoFundamentoLegal"]])), na.rm = TRUE),
VlrRVar = sum(filter(.[["valorTotalAtual"]], grepl("^Art 8", .[["textoFundamentoLegal"]])), na.rm = TRUE))
fundos <- dair %>%
filter(!is.na(cnpj_fi), textoFundamentoLegal != "Outros") %>%
group_by(ente, periodo) %>%
summarise(VlrRFix = sum(filter(.[["valorTotalAtual"]], grepl("^Art 7", .[["textoFundamentoLegal"]])), na.rm = TRUE),
VlrRVar = sum(filter(.[["valorTotalAtual"]], grepl("^Art 8", .[["textoFundamentoLegal"]])), na.rm = TRUE))
fundos <- dair %>%
filter(!is.na(cnpj_fi), textoFundamentoLegal != "Outros") %>%
group_by(ente, periodo) %>%
summarise(VlrRFix = sum(filter(valorTotalAtual, grepl("^Art 7", .[["textoFundamentoLegal"]])), na.rm = TRUE),
VlrRVar = sum(filter(valorTotalAtual, grepl("^Art 8", .[["textoFundamentoLegal"]])), na.rm = TRUE))
fundos <- dair %>%
filter(!is.na(cnpj_fi), textoFundamentoLegal != "Outros") %>%
mutate(tipo = ifelse(grepl("^Art 7", .[["textoFundamentoLegal"]]), "RFIX", "RVAR")) #%>%
View(fundos)
fundos <- dair %>%
filter(!is.na(cnpj_fi), textoFundamentoLegal != "Outros") %>%
mutate(tipo = ifelse(grepl("^Art 7", .[["textoFundamentoLegal"]]), "RFIX", "RVAR")) #%>%
group_by(ente, periodo, tipo) %>%
summarise(VlrRFix = sum(valorTotalAtivo, na.rm = TRUE),
VlrRVar = sum(valorTitalAtivo, na.rm = TRUE))
View(dair)
fundos <- dair %>%
filter(!is.na(cnpj_fi), textoFundamentoLegal != "Outros") %>%
mutate(tipo = ifelse(grepl("^Art 7", .[["textoFundamentoLegal"]]), "RFIX", "RVAR")) %>%
group_by(ente, periodo, tipo) %>%
summarise(VlrRFix = sum(valorTotalAtivo, na.rm = TRUE),
VlrRVar = sum(valorTitalAtivo, na.rm = TRUE))
fundos <- dair %>%
filter(!is.na(cnpj_fi), textoFundamentoLegal != "Outros") %>%
mutate(tipo = ifelse(grepl("^Art 7", .[["textoFundamentoLegal"]]), "RFIX", "RVAR")) %>%
group_by(ente, periodo, tipo) %>%
summarise(VlrRFix = sum(valorTotalAtual, na.rm = TRUE),
VlrRVar = sum(valorTitalAtual, na.rm = TRUE))
fundos <- dair %>%
filter(!is.na(cnpj_fi), textoFundamentoLegal != "Outros") %>%
mutate(tipo = ifelse(grepl("^Art 7", .[["textoFundamentoLegal"]]), "RFIX", "RVAR")) %>%
group_by(ente, periodo, tipo) %>%
summarise(VlrRFix = sum(valorTotalAtual, na.rm = TRUE),
VlrRVar = sum(valorTotalAtual, na.rm = TRUE))
View(fundos)
fundos <- dair %>%
filter(!is.na(cnpj_fi), textoFundamentoLegal != "Outros") %>%
mutate(tipo = ifelse(grepl("^Art 7", .[["textoFundamentoLegal"]]), "RFIX", "RVAR")) %>%
group_by(ente, periodo) %>%
summarise(VlrRFix = sum(valorTotalAtual == "RFIX", na.rm = TRUE),
VlrRVar = sum(valorTotalAtual == "RVAR", na.rm = TRUE))
View(fundos)
fundos <- dair %>%
filter(!is.na(cnpj_fi), textoFundamentoLegal != "Outros") %>%
mutate(tipo = ifelse(grepl("^Art 7", .[["textoFundamentoLegal"]]), "RFIX", "RVAR")) %>%
group_by(ente, periodo) %>%
summarise(VlrRFix = sum(valorTotalAtual[tipo == "RFIX"], na.rm = TRUE),
VlrRVar = sum(valorTotalAtual[tipo == "RVAR"], na.rm = TRUE))
View(fundos)
View(fundos)
View(fundos)
rm(fundos)
fundos <- dair %>%
filter(!is.na(cnpj_fi), textoFundamentoLegal != "Outros") %>% # pega só fundos de investimento...
#mutate(tipo = ifelse(grepl("^Art 7", .[["textoFundamentoLegal"]]), "RFIX", "RVAR")) %>%
mutate(tipo = ifelse(grepl("^Art 7", textoFundamentoLegal), "RFIX", "RVAR")) %>%
group_by(ente, periodo) %>%
summarise(VlrRFix = sum(valorTotalAtual[tipo == "RFIX"], na.rm = TRUE),
VlrRVar = sum(valorTotalAtual[tipo == "RVAR"], na.rm = TRUE))
View(fundos)
library(readxl)
# Importa dados de enquadramento
enquadramento <- read_excel("dados/2018-01-09-Planilha-de-enquadramento-dos-Fundos-DIINV-CGACI-SRPPS-2.xlsx", sheet = "Enquadramento dos fundos")
View(enquadramento)
saveRDS(enquadramento, file = "dados/enquadramento.rds")
saveRDS(enquadramento, file = "dados/enquadramento_2018-01-09.rds")
limites_cmn <- read_excel("dados/limites_cmn.xlsx")
View(limites_cmn)
saveRDS(limites_cmn, file="dados/limites_cmn.rds")
install.packages("dslabs")
grep("ETB", dair$identificacaoDoAtivo, value = TRUE, ignore.case = TRUE)
grep("ET", dair$identificacaoDoAtivo, value = TRUE, ignore.case = TRUE)
grep("FIDC", dair$identificacaoDoAtivo, value = TRUE, ignore.case = TRUE)
unique(grep("FIDC", dair$identificacaoDoAtivo, value = TRUE, ignore.case = TRUE))
shiny::runApp()
shiny::runApp()
runApp()
